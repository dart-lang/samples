# Created with package:mono_repo v3.4.5
language: dart

jobs:
  include:
    - stage: mono_repo_self_validate
      name: mono_repo self validate
      os: linux
      script: "pub global activate mono_repo 3.4.5 && pub global run mono_repo generate --validate"
    - stage: analyze
      name: "Dart dev; PKGS: command_line, extension_methods, ffi/hello_world, ffi/primitives, ffi/structs, ffi/system-command, native_app; `dartanalyzer --fatal-infos --fatal-warnings .`"
      dart: dev
      os: linux
      env: "PKGS=\"command_line extension_methods ffi/hello_world ffi/primitives ffi/structs ffi/system-command native_app\""
      script: tool/ci.sh dartanalyzer
    - stage: analyze
      name: "Dart stable; PKGS: command_line, extension_methods, ffi/hello_world, ffi/primitives, ffi/structs, ffi/system-command, native_app; `dartanalyzer --fatal-infos --fatal-warnings .`"
      dart: stable
      os: linux
      env: "PKGS=\"command_line extension_methods ffi/hello_world ffi/primitives ffi/structs ffi/system-command native_app\""
      script: tool/ci.sh dartanalyzer
    - stage: analyze
      name: "Dart dev; PKGS: command_line, extension_methods, ffi/hello_world, ffi/primitives, ffi/structs, ffi/system-command, native_app; `dartfmt -n --set-exit-if-changed .`"
      dart: dev
      os: linux
      env: "PKGS=\"command_line extension_methods ffi/hello_world ffi/primitives ffi/structs ffi/system-command native_app\""
      script: tool/ci.sh dartfmt
    - stage: unit_test
      name: "Dart dev; PKG: command_line; `pub run test`"
      dart: dev
      os: linux
      env: PKGS="command_line"
      script: tool/ci.sh test
    - stage: unit_test
      name: "Dart dev; PKG: command_line; `pub run test`"
      dart: dev
      os: macos
      env: PKGS="command_line"
      script: tool/ci.sh test
    - stage: unit_test
      name: "Dart dev; PKG: command_line; `pub run test`"
      dart: dev
      os: windows
      env: PKGS="command_line"
      script: tool/ci.sh test
    - stage: unit_test
      name: "Dart stable; PKG: command_line; `pub run test`"
      dart: stable
      os: linux
      env: PKGS="command_line"
      script: tool/ci.sh test
    - stage: unit_test
      name: "Dart stable; PKG: command_line; `pub run test`"
      dart: stable
      os: macos
      env: PKGS="command_line"
      script: tool/ci.sh test
    - stage: unit_test
      name: "Dart stable; PKG: command_line; `pub run test`"
      dart: stable
      os: windows
      env: PKGS="command_line"
      script: tool/ci.sh test
    - stage: unit_test
      name: "Dart dev; PKG: extension_methods; `pub run test`"
      dart: dev
      os: linux
      env: PKGS="extension_methods"
      script: tool/ci.sh test
    - stage: unit_test
      name: "Dart dev; PKG: extension_methods; `pub run test`"
      dart: dev
      os: macos
      env: PKGS="extension_methods"
      script: tool/ci.sh test
    - stage: unit_test
      name: "Dart dev; PKG: extension_methods; `pub run test`"
      dart: dev
      os: windows
      env: PKGS="extension_methods"
      script: tool/ci.sh test
    - stage: unit_test
      name: "Dart stable; PKG: extension_methods; `pub run test`"
      dart: stable
      os: linux
      env: PKGS="extension_methods"
      script: tool/ci.sh test
    - stage: unit_test
      name: "Dart stable; PKG: extension_methods; `pub run test`"
      dart: stable
      os: macos
      env: PKGS="extension_methods"
      script: tool/ci.sh test
    - stage: unit_test
      name: "Dart stable; PKG: extension_methods; `pub run test`"
      dart: stable
      os: windows
      env: PKGS="extension_methods"
      script: tool/ci.sh test
    - stage: unit_test
      name: "Dart dev; PKG: ffi/hello_world; `pub run test`"
      dart: dev
      os: linux
      env: PKGS="ffi/hello_world"
      script: tool/ci.sh test
    - stage: unit_test
      name: "Dart stable; PKG: ffi/hello_world; `pub run test`"
      dart: stable
      os: linux
      env: PKGS="ffi/hello_world"
      script: tool/ci.sh test
    - stage: unit_test
      name: "Dart dev; PKG: ffi/primitives; `pub run test`"
      dart: dev
      os: linux
      env: PKGS="ffi/primitives"
      script: tool/ci.sh test
    - stage: unit_test
      name: "Dart stable; PKG: ffi/primitives; `pub run test`"
      dart: stable
      os: linux
      env: PKGS="ffi/primitives"
      script: tool/ci.sh test

stages:
  - mono_repo_self_validate
  - analyze
  - unit_test

# Only building master means that we don't run two builds for each pull request.
branches:
  only:
    - master

cache:
  directories:
    - $HOME/.pub-cache
