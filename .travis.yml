# Created with package:mono_repo v2.3.0
language: dart

# Custom configuration
addons:
  apt:
    packages:
      - cmake

jobs:
  include:
    - stage: analyze
      name: "SDK: dev; PKGS: command_line, extension_methods, ffi/hello_world, ffi/primitives, ffi/structs, ffi/system-command, native_app; TASKS: `dartanalyzer --fatal-infos --fatal-warnings .`"
      dart: dev
      os: linux
      env: "PKGS=\"command_line extension_methods ffi/hello_world ffi/primitives ffi/structs ffi/system-command native_app\""
      script: ./tool/travis.sh dartanalyzer
    - stage: analyze
      name: "SDK: stable; PKGS: command_line, extension_methods, ffi/hello_world, ffi/primitives, ffi/structs, ffi/system-command, native_app; TASKS: `dartanalyzer --fatal-infos --fatal-warnings .`"
      dart: stable
      os: linux
      env: "PKGS=\"command_line extension_methods ffi/hello_world ffi/primitives ffi/structs ffi/system-command native_app\""
      script: ./tool/travis.sh dartanalyzer
    - stage: analyze
      name: "SDK: dev; PKGS: command_line, extension_methods, ffi/hello_world, ffi/primitives, ffi/structs, ffi/system-command, native_app; TASKS: `dartfmt -n --set-exit-if-changed .`"
      dart: dev
      os: linux
      env: "PKGS=\"command_line extension_methods ffi/hello_world ffi/primitives ffi/structs ffi/system-command native_app\""
      script: ./tool/travis.sh dartfmt
    - stage: analyze
      name: "SDK: stable; PKGS: command_line, extension_methods, ffi/hello_world, ffi/primitives, ffi/structs, ffi/system-command, native_app; TASKS: `dartfmt -n --set-exit-if-changed .`"
      dart: stable
      os: linux
      env: "PKGS=\"command_line extension_methods ffi/hello_world ffi/primitives ffi/structs ffi/system-command native_app\""
      script: ./tool/travis.sh dartfmt
    - stage: unit_test
      name: "SDK: dev; PKG: command_line; TASKS: `pub run test`"
      dart: dev
      os: linux
      env: PKGS="command_line"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: dev; PKG: command_line; TASKS: `pub run test`"
      dart: dev
      os: osx
      env: PKGS="command_line"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: dev; PKG: command_line; TASKS: `pub run test`"
      dart: dev
      os: windows
      env: PKGS="command_line"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: stable; PKG: command_line; TASKS: `pub run test`"
      dart: stable
      os: linux
      env: PKGS="command_line"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: stable; PKG: command_line; TASKS: `pub run test`"
      dart: stable
      os: osx
      env: PKGS="command_line"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: stable; PKG: command_line; TASKS: `pub run test`"
      dart: stable
      os: windows
      env: PKGS="command_line"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: dev; PKG: extension_methods; TASKS: `pub run test`"
      dart: dev
      os: linux
      env: PKGS="extension_methods"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: dev; PKG: extension_methods; TASKS: `pub run test`"
      dart: dev
      os: osx
      env: PKGS="extension_methods"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: dev; PKG: extension_methods; TASKS: `pub run test`"
      dart: dev
      os: windows
      env: PKGS="extension_methods"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: stable; PKG: extension_methods; TASKS: `pub run test`"
      dart: stable
      os: linux
      env: PKGS="extension_methods"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: stable; PKG: extension_methods; TASKS: `pub run test`"
      dart: stable
      os: osx
      env: PKGS="extension_methods"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: stable; PKG: extension_methods; TASKS: `pub run test`"
      dart: stable
      os: windows
      env: PKGS="extension_methods"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: dev; PKG: ffi/hello_world; TASKS: `pub run test`"
      dart: dev
      os: linux
      env: PKGS="ffi/hello_world"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: stable; PKG: ffi/hello_world; TASKS: `pub run test`"
      dart: stable
      os: linux
      env: PKGS="ffi/hello_world"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: dev; PKG: ffi/primitives; TASKS: `pub run test`"
      dart: dev
      os: linux
      env: PKGS="ffi/primitives"
      script: ./tool/travis.sh test
    - stage: unit_test
      name: "SDK: stable; PKG: ffi/primitives; TASKS: `pub run test`"
      dart: stable
      os: linux
      env: PKGS="ffi/primitives"
      script: ./tool/travis.sh test

stages:
  - analyze
  - unit_test

# Only building master means that we don't run two builds for each pull request.
branches:
  only:
    - master

cache:
  directories:
    - "$HOME/.pub-cache"
